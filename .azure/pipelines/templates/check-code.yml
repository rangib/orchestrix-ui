# Code quality checks: lint, typecheck, unit tests, coverage
stages:
  - stage: CheckCode
    displayName: 'Code Quality Checks'
    jobs:
      - job: LintTypeCheckTest
        displayName: 'Lint, TypeCheck, Unit Tests'
        pool:
          vmImage: 'ubuntu-latest'
        
        steps:
          - task: NodeTool@0
            displayName: 'Setup Node.js 20'
            inputs:
              versionSpec: '20'
          
          - script: |
              cd src
              npm ci
            displayName: 'Install dependencies'
          
          # Fail-fast linting
          - script: |
              cd src
              npm run lint
            displayName: 'ESLint check'
            
          # TypeScript compilation check
          - script: |
              cd src
              npx tsc --noEmit
            displayName: 'TypeScript check'
            
          # Unit tests with coverage
          - script: |
              cd src
              npm run test:coverage
            displayName: 'Run unit tests with coverage'
            
          # Publish coverage results
          - task: PublishCodeCoverageResults@1
            displayName: 'Publish coverage results'
            inputs:
              codeCoverageTool: 'Cobertura'
              summaryFileLocation: 'src/coverage/cobertura-coverage.xml'
              reportDirectory: 'src/coverage'
              failIfCoverageEmpty: true
            condition: succeededOrFailed()
            
          # Publish test results
          - task: PublishTestResults@2
            displayName: 'Publish test results'
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'src/test-results.xml'
              mergeTestResults: true
            condition: succeededOrFailed()
            
          # Fail build if coverage is below threshold
          - script: |
              cd src
              if [ -f coverage/coverage-summary.json ]; then
                COVERAGE=$(node -e "console.log(JSON.parse(require('fs').readFileSync('coverage/coverage-summary.json', 'utf8')).total.lines.pct)")
                if (( $(echo "$COVERAGE < 80" | bc -l) )); then
                  echo "##[error]Code coverage ($COVERAGE%) is below minimum threshold (80%)"
                  exit 1
                fi
                echo "Code coverage: $COVERAGE%"
              else
                echo "##[warning]No coverage report found"
              fi
            displayName: 'Validate coverage threshold'