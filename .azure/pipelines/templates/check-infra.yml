stages:
  - stage: CheckInfrastructure
    displayName: 'Infrastructure Validation & Security'
    jobs:
      - job: ValidateInfra
        displayName: 'Validate Bicep & Security Scan'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: AzureCLI@2
            displayName: 'Install Azure CLI Bicep extension'
            inputs:
              azureSubscription: '$(azureServiceConnection)' # Configure in variable groups
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az bicep install
                az bicep version

          - task: AzureCLI@2
            displayName: 'Build and validate Bicep templates'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Building main Bicep template..."
                az bicep build --file infra/main.bicep --stdout > main-template.json
                
                echo "Building resources Bicep template..."
                az bicep build --file infra/resources.bicep --stdout > resources-template.json || true
                
                echo "Bicep templates built successfully"

          # TODO: Uncomment when Checkov is configured
          # - script: |
          #     pip install checkov
          #     checkov -f main-template.json --framework arm --output sarif --output-file-path checkov-results.sarif || true
          #   displayName: 'Run Checkov IaC security scan'

          # TODO: Uncomment when GitLeaks is configured
          # - script: |
          #     docker run --rm -v $(System.DefaultWorkingDirectory):/path zricethezav/gitleaks:latest detect --source="/path" --report-format=sarif --report-path=/path/gitleaks-results.sarif --verbose || true
          #   displayName: 'Run GitLeaks secrets scan'

          # TODO: Enable SARIF uploads when configured
          # - task: PublishBuildArtifacts@1
          #   inputs:
          #     PathtoPublish: 'checkov-results.sarif'
          #     ArtifactName: 'checkov-sarif'
          #   condition: always()